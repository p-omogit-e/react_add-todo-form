{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","email","name","className","href","TodoInfo","title","user","completed","cn","id","TodoList","todosArr","map","oneTodo","username","getUser","userId","usersFromServer","find","todos","todo","App","useState","setUserId","setTitle","errorTitle","setErrorTitle","errorUser","setErrorUser","handleAdd","newUser","newTitle","maxId","forEach","element","Math","max","newTodo","push","method","action","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9862b687.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\nexport const UserInfo: React.FC<User | null> = ({ email, name }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto: ${email}`}\n  >\n    {name}\n  </a>\n);\n","import cn from 'classnames';\n\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  title: string,\n  user: User | null,\n  completed: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, user, completed }) => {\n  const className = cn('TodoInfo', {\n    'TodoInfo--completed': completed,\n  });\n\n  return (\n    <article\n      className={className}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user\n        && (\n          <UserInfo\n            name={user.name}\n            email={user.email}\n            id={user.id}\n          />\n        )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todosArr: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todosArr = [] }) => (\n  <ul className=\"TodoList\">\n    {todosArr.map((oneTodo: Todo) => (\n      <li key={oneTodo.id}>\n        <TodoInfo {...oneTodo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  function resertState() {\n    setTitle('');\n    setUserId(0);\n    setErrorTitle(false);\n    setErrorUser(false);\n  }\n\n  function checkErrors() {\n    if (title === '') {\n      setErrorTitle(true);\n    }\n\n    if (userId === 0) {\n      setErrorUser(true);\n    }\n  }\n\n  function handleAdd(newUser: number, newTitle: string): Todo[] {\n    if (!errorTitle && !errorUser) {\n      let maxId = 0;\n\n      todos.forEach(element => {\n        maxId = Math.max(maxId, element.id);\n      });\n\n      const newTodo = {\n        id: maxId + 1,\n        userId: newUser,\n        title: newTitle,\n        completed: false,\n        user: getUser(newUser),\n      };\n\n      todos.push(newTodo);\n      resertState();\n    }\n\n    return todos;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        method=\"POST\"\n        action=\"/api/users\"\n        onSubmit={(event) => {\n          handleAdd(userId, title);\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n          />\n          {errorTitle\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser\n          && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            checkErrors();\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todosArr={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}