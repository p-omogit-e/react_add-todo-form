{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","title","completed","cn","TodoList","todosArr","map","oneTodo","id","username","getUser","userId","usersFromServer","find","todos","todo","App","useState","userIdAdd","setUserId","titleAdd","setTitle","errorTitle","setErrorTitle","errorUser","setErrorUser","method","action","onSubmit","event","newUser","newTitle","maxId","forEach","element","Math","max","newTodo","push","handleAdd","preventDefault","type","value","placeholder","onChange","target","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9349ee53.chunk.js","sourcesContent":["type Props = {\n  user: {\n    name?: string,\n    email?: string,\n  } | null\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto: ${user && user.email}`}>\n    {user && user.name}\n  </a>\n);\n","import cn from 'classnames';\n\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  title: string,\n  user: User | null,\n  completed: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, user, completed }) => {\n  const className = cn('TodoInfo', {\n    'TodoInfo--completed': completed,\n  });\n\n  return (\n    <article\n      className={className}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todosArr: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todosArr = [] }) => (\n  <ul className=\"TodoList\">\n    {todosArr.map((oneTodo: Todo) => (\n      <li key={oneTodo.id}>\n        <TodoInfo {...oneTodo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [userIdAdd, setUserId] = useState(0);\n  const [titleAdd, setTitle] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  function Errors() {\n    if (titleAdd === '') {\n      setErrorTitle(true);\n    }\n\n    if (userIdAdd === 0) {\n      setErrorUser(true);\n    }\n  }\n\n  function handleAdd(newUser: number, newTitle: string): Todo[] {\n    if (!errorTitle && !errorUser) {\n      let maxId = 0;\n\n      todos.forEach(element => {\n        maxId = Math.max(maxId, element.id);\n      });\n\n      const newTodo = {\n        id: maxId + 1,\n        userId: newUser,\n        title: newTitle,\n        completed: false,\n        user: getUser(newUser),\n      };\n\n      todos.push(newTodo);\n      setTitle('');\n      setUserId(0);\n      setErrorTitle(false);\n      setErrorUser(false);\n    }\n\n    return todos;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        method=\"POST\"\n        action=\"/api/users\"\n        onSubmit={(event) => {\n          handleAdd(userIdAdd, titleAdd);\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            value={titleAdd}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n          />\n          {errorTitle\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userIdAdd}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser\n          && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            Errors();\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todosArr={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}